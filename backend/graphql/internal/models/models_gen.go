// Code generated by github.com/99designs/gqlgen, DO NOT EDIT.

package models

import (
	"fmt"
	"io"
	"strconv"

	"github.com/hantonelli/ghipster/graphql/internal/service/ent/gen"
)

type CreateProductInput struct {
	Name string `json:"name"`
}

type ProductFilterInput struct {
	NameLike *string `json:"name_like"`
}

type ProductOrderInput struct {
	Field     ProductlOrderFieldInput `json:"field"`
	Direction *OrderDirection         `json:"direction"`
}

type ProductsPayload struct {
	TotalCount int            `json:"total_count"`
	Nodes      []*gen.Product `json:"nodes"`
}

type UpdateProductInput struct {
	ID   int    `json:"id"`
	Name string `json:"name"`
}

type OrderDirection string

const (
	OrderDirectionAsc  OrderDirection = "ASC"
	OrderDirectionDesc OrderDirection = "DESC"
)

var AllOrderDirection = []OrderDirection{
	OrderDirectionAsc,
	OrderDirectionDesc,
}

func (e OrderDirection) IsValid() bool {
	switch e {
	case OrderDirectionAsc, OrderDirectionDesc:
		return true
	}
	return false
}

func (e OrderDirection) String() string {
	return string(e)
}

func (e *OrderDirection) UnmarshalGQL(v interface{}) error {
	str, ok := v.(string)
	if !ok {
		return fmt.Errorf("enums must be strings")
	}

	*e = OrderDirection(str)
	if !e.IsValid() {
		return fmt.Errorf("%s is not a valid OrderDirection", str)
	}
	return nil
}

func (e OrderDirection) MarshalGQL(w io.Writer) {
	fmt.Fprint(w, strconv.Quote(e.String()))
}

type ProductlOrderFieldInput string

const (
	ProductlOrderFieldInputName ProductlOrderFieldInput = "NAME"
)

var AllProductlOrderFieldInput = []ProductlOrderFieldInput{
	ProductlOrderFieldInputName,
}

func (e ProductlOrderFieldInput) IsValid() bool {
	switch e {
	case ProductlOrderFieldInputName:
		return true
	}
	return false
}

func (e ProductlOrderFieldInput) String() string {
	return string(e)
}

func (e *ProductlOrderFieldInput) UnmarshalGQL(v interface{}) error {
	str, ok := v.(string)
	if !ok {
		return fmt.Errorf("enums must be strings")
	}

	*e = ProductlOrderFieldInput(str)
	if !e.IsValid() {
		return fmt.Errorf("%s is not a valid ProductlOrderFieldInput", str)
	}
	return nil
}

func (e ProductlOrderFieldInput) MarshalGQL(w io.Writer) {
	fmt.Fprint(w, strconv.Quote(e.String()))
}
